# omz setup

export ZSH="$ZDOTDIR/ohmyzsh"
export ZSH_CUSTOM="$ZDOTDIR/ohmyzsh-custom"

ZSH_THEME="mass"

# Must define git aliases before initializing omz so that chezmoi plugin will detect them
alias gaf="git ls-files --modified --others --exclude-standard | fzf --print0 --multi | xargs -0 -t git add"

plugins=(
  # Quality of life
  zsh-syntax-highlighting
  zsh-autosuggestions
  you-should-use
  vi-mode
  # Utilities
  git
  chezmoi
  fzf
  # Languages
  zsh-nvm
  golang
  rust
)

source $ZSH/oh-my-zsh.sh

[ -f "$ZDOTDIR/.zshrc.local" ] && source "$ZDOTDIR/.zshrc.local"

# cd is needed to prevent corepack from triggering on "packageManager"
(( $+commands[pnpm] )) && source <(cd ~ && pnpm completion zsh)

alias pg="pgrep -a"
alias pk="pkill"
alias pfg="pgrep -fa"
alias pfk="pkill -f"
alias pf="ps aux | fzf | awk '{print $2}' | xargs kill"
alias rt='cd $(git rev-parse --show-toplevel)'

function pnf() {
  if [[ $+commands[jq] != 1 ]]; then
    echo "Error: Could not find executable 'jq'"
    return 1
  fi

  packages=$(find . -type d \( -name node_modules -o -path '*/.*' \) -prune -o -name package.json -print)
  if [[ -z $packages ]]; then
    echo "Error: There's no 'package.json'"
    return 1
  else
    package=$(echo $packages | fzf --prompt="package.json location 󰄾 " --height ~50% --layout=reverse --border --tac --select-1)
  fi

  if [[ -z $package ]]; then
    echo "Exit: You didn't select a package.json file"
    return 1
  fi
  
  scripts=$(cat $package | jq .scripts | sed '1d;$d' | fzf --prompt="$package script 󰄾 " --height ~50% --layout=reverse --border)
  if [[ -z $scripts ]]; then
    echo "Exit: You didn't select a package.json script"
    return 1
  fi
  
  dir=$(dirname $package)
  script=$(echo $scripts | awk -F ': ' '{gsub(/[" ]/, "", $1); print $1}')
  cmd="(cd $dir && pnpm run $script)"
  print -s $cmd
  eval $cmd
}
