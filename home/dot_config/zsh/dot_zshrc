# omz setup

export ZSH="$ZDOTDIR/ohmyzsh"
export ZSH_CUSTOM="$ZDOTDIR/ohmyzsh-custom"

ZSH_THEME="mass"

# Must define git aliases before initializing omz so that chezmoi plugin will detect them
alias gaf="git ls-files --modified --others --exclude-standard | fzf --print0 --multi | xargs -0 -t git add"

plugins=(
  # Quality of life
  zsh-syntax-highlighting
  zsh-autosuggestions
  you-should-use
  vi-mode
  # Utilities
  git
  chezmoi
  fzf
  # Languages
  zsh-nvm
  golang
  rust
)

source $ZSH/oh-my-zsh.sh

[ -f "$ZDOTDIR/.zshrc.local" ] && source "$ZDOTDIR/.zshrc.local"

# cd is needed to prevent corepack from triggering on "packageManager"
(( $+commands[pnpm] )) && source <(cd ~ && pnpm completion zsh)

alias pg="pgrep -a"
alias pk="pkill"
alias pf="ps aux | fzf | awk '{print $2}' | xargs kill"
alias rt="cd $(git rev-parse --show-top-level)"

function pnf() {
  if [[ $+commands[jq] -ne 1 ]]; then
    echo "Error: Could not find executable 'jq'"
    return 1
  fi

  packages=$(find . -type d -name node_modules -prune -o -name package.json -print)
  if [[ -z $packages ]]; then
    echo "Error: There's no 'package.json'"
    return 1
  elif [[ $packages = "./package.json" ]]; then
    package=$packages
  else
    package=$(echo $packages | fzf --height 40%)
  fi

  if [[ -z $package ]]; then
    echo "Exit: You didn't select a package.json file"
    return 1
  fi
  
  cd $(dirname $package)
  scripts=$(cat package.json | jq .scripts | sed '1d;$d' | fzf --height 40%)
  if [[ -z $scripts ]]; then
    echo "Exit: You didn't select a script"
    return 1
  fi

  script_name=$(echo $scripts | awk -F ': ' '{gsub(/[" ]/, "", $1); print $1}')
  echo "pnpm run $script_name"
  pnpm run $script_name
}
